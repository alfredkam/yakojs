var chai = require('chai');
var expect = chai.expect;
var bubbleChart = require('../../src/components/bubble');

describe('/src/bubble', function () {
    var bubble;
    before(function () {
        bubble = new bubbleChart();
    });

    after(function () {
        bubble = '';
    });

    it('_getRatio - should describe a ratio for a bubble-scattered', function () {
        var data = [ { data: 
         [ [ 279, 247, 482 ],
           [ 211, 230, 197 ],
           [ 377, 472, 106 ],
           [ 346, 196, 291 ],
           [ 85, 489, 260 ],
           [ 245, 191, 506 ],
           [ 425, 250, 152 ],
           [ 99, 65, 171 ],
           [ 136, 215, 460 ],
           [ 297, 215, 469 ],
           [ 409, 20, 223 ],
           [ 393, 410, 460 ],
           [ 331, 492, 479 ],
           [ 266, 273, 159 ],
           [ 322, 421, 183 ],
           [ 10, 466, 127 ],
           [ 53, 26, 326 ],
           [ 144, 313, 386 ],
           [ 474, 304, 401 ],
           [ 356, 226, 367 ],
           [ 138, 278, 418 ],
           [ 217, 144, 461 ],
           [ 390, 317, 180 ],
           [ 166, 330, 307 ],
           [ 489, 495, 238 ],
           [ 262, 435, 322 ],
           [ 140, 296, 319 ],
           [ 146, 482, 157 ],
           [ 495, 93, 494 ],
           [ 257, 113, 297 ],
        ],
        fill: '#8bff16' },
      { data: 
         [ [ 312, 286, 288 ],
           [ 77, 133, 294 ],
           [ 318, 459, 338 ],
           [ 38, 439, 437 ],
           [ 27, 379, 382 ],
           [ 25, 214, 236 ],
           [ 44, 429, 26 ],
           [ 194, 429, 452 ],
           [ 198, 40, 400 ],
           [ 54, 386, 84 ],
           [ 407, 272, 446 ],
           [ 394, 295, 460 ],
           [ 452, 440, 335 ],
           [ 205, 375, 45 ],
           [ 25, 455, 36 ],
           [ 258, 97, 451 ],
           [ 297, 437, 506 ],
           [ 119, 149, 506 ],
           [ 384, 323, 448 ],
           [ 142, 358, 363 ],
           [ 329, 75, 145 ],
           [ 391, 117, 230 ],
           [ 56, 438, 343 ],
           [ 447, 307, 260 ],
           [ 495, 322, 402 ],
           [ 239, 216, 346 ],
           [ 310, 307, 465 ],
           [ 204, 11, 349 ],
           [ 375, 436, 486 ],
           [ 232, 103, 386 ]
        ],
        fill: '#3bb3dc'
        }];

        var scale = { min: { '0': 10, '1': 11, '2': 26 },
              max: { '0': 495, '1': 500, '2': 506 },
              maxSet: [],
              len: 30,
              rows: 2,
              ySecs: 5,
              color: [ undefined, undefined ],
              maxRadius: '10',
              yAxis: true,
              xAxis: { format: 'custom', labels: [ 'low', 'high' ] },
              scattered: false,
              fill: true,
              line: true,
              paddingBottom: 20,
              paddingTop: 20,
              paddingRight: 30,
              paddingLeft: 30,
              height: 100,
              width: 300,
              type: 'bubble-scattered',
              _data: data,
              pHeight: 60,
              pWidth: 240,
              tickSize: 120,
              prefLen: 2 };

        var result =  { min: { '0': 10, '1': 11, '2': 26 },
            max: { '0': 495, '1': 500, '2': 506 },
            maxSet: [],
            len: 30,
            rows: 2,
            ySecs: 5,
            color: [ undefined, undefined ],
            minRadius: 0,
            maxRadius: 10,
            yAxis: true,
            xAxis: { format: 'custom', labels: [ 'low', 'high' ] },
            scattered: false,
            fill: true,
            line: true,
            paddingBottom: 20,
            paddingTop: 20,
            paddingRight: 30,
            paddingLeft: 30,
            height: 100,
            width: 300,
            type: 'bubble-scattered',
            _data: data,
            pHeight: 60,
            pWidth: 240,
            tickSize: 120,
            prefLen: 2,
            widthRatio: 0.48484848484848486,
            heightRatio: 0.12 };

        bubble._getRatio(scale);
        expect(scale)
            .to.deep.equal(result);
    });

    it('_getRatio - should describe the ratio for a bubble-point', function () {
        var scale =  { min: 23,
            max: 492,
            maxSet: [],
            len: 30,
            rows: 1,
            ySecs: 0,
            color: [],
            xAxis: { strokeColor: '#333' },
            bubble: { maxRadius: 10, strokeColor: 'red', strokeWidth: '3' },
            scattered: false,
            fill: true,
            line: true,
            paddingBottom: 0,
            paddingTop: 0,
            paddingRight: 0,
            paddingLeft: 0,
            height: 100,
            width: 300,
            type: 'bubble-point',
            _data: 
            [ 483,
             170,
             307,
             491,
             113,
             191,
             138,
             105,
             489,
             262,
             61,
             444,
             23,
             339,
             428,
             267,
             99,
             183,
             160,
             196,
             367,
             281,
             33,
             400,
             416,
             252,
             364,
             340,
             492,
             262 ] };

        var result = { min: 23,
            max: 492,
            maxSet: [],
            len: 30,
            rows: 1,
            ySecs: 0,
            color: [],
            xAxis: { strokeColor: '#333' },
            bubble: {
                minRadius:0,
                maxRadius: 10,
                strokeColor: 'red',
                strokeWidth: '3'
            },
            scattered: false,
            fill: true,
            line: true,
            paddingBottom: 0,
            paddingTop: 0,
            paddingRight: 5.325203252032519,
            paddingLeft: 9.817073170731707,
            height: 100,
            width: 300,
            type: 'bubble-point',
            _data: 
            [ 483,
            170,
            307,
            491,
            113,
            191,
            138,
            105,
            489,
            262,
            61,
            444,
            23,
            339,
            428,
            267,
            99,
            183,
            160,
            196,
            367,
            281,
            33,
            400,
            416,
            252,
            364,
            340,
            492,
            262 ],
            tickSize: 9.822680123352958 };

        bubble._getRatio(scale);
        expect(scale)
            .to.deep.equal(result);
    });

    it('_describeXAxis should describe the horizontal line', function () {
        var scale =  { min: 23,
            max: 492,
            maxSet: [],
            len: 30,
            rows: 1,
            ySecs: 0,
            color: [],
            xAxis: { strokeColor: '#333' },
            bubble: { maxRadius: 10, strokeColor: 'red', strokeWidth: '3' },
            scattered: false,
            fill: true,
            line: true,
            paddingBottom: 0,
            paddingTop: 0,
            paddingRight: 0,
            paddingLeft: 0,
            height: 100,
            width: 300,
            type: 'bubble-point',
            _data: 
            [ 483,
             170,
             307,
             491,
             113,
             191,
             138,
             105,
             489,
             262,
             61,
             444,
             23,
             339,
             428,
             267,
             99,
             183,
             160,
             196,
             367,
             281,
             33,
             400,
             416,
             252,
             364,
             340,
             492,
             262 ] };
        var result = bubble._describeXAxis(500, 300, scale);
        expect(result)
            .to.satisfy(function (result) {
                return (/<path\s.*>/i).test(result) && !(/NaN/).test(result);
            });
    });

    it('_describeBubble should describe a bubble point chart', function () {
        var data = [ 483,
             170,
             307,
             491,
             113,
             191,
             138,
             105,
             489,
             262,
             61,
             444,
             23,
             339,
             428,
             267,
             99,
             183,
             160,
             196,
             367,
             281,
             33,
             400,
             416,
             252,
             364,
             340,
             492,
             262 ];

        var scale =  { min: 23,
            max: 492,
            maxSet: [],
            len: 30,
            rows: 1,
            ySecs: 0,
            color: [],
            xAxis: { strokeColor: '#333' },
            bubble: { maxRadius: 10, strokeColor: 'red', strokeWidth: '3' },
            scattered: false,
            fill: true,
            line: true,
            paddingBottom: 0,
            paddingTop: 0,
            paddingRight: 5.325203252032519,
            paddingLeft: 9.817073170731707,
            height: 100,
            width: 300,
            type: 'bubble-point',
            _data: data,
            tickSize: 9.822680123352958 };

        var result = bubble._describeBubble(data, 300, 100, scale);
        expect(result)
            .to.be.a('array')
            .to.satisfy(function (result) {
                return (/<circle\s.*>/i).test(result.join("")) && !(/NaN/).test(result.join(""));
            });
    });

    it('_describeBubbleChart should describe a scattered bubble graph', function () {
          var data = [ { data: 
           [ [ 279, 247, 482 ],
             [ 211, 230, 197 ],
             [ 377, 472, 106 ],
             [ 346, 196, 291 ],
             [ 85, 489, 260 ],
             [ 245, 191, 506 ],
             [ 425, 250, 152 ],
             [ 99, 65, 171 ],
             [ 136, 215, 460 ],
             [ 297, 215, 469 ],
             [ 409, 20, 223 ],
             [ 393, 410, 460 ],
             [ 331, 492, 479 ],
             [ 266, 273, 159 ],
             [ 322, 421, 183 ],
             [ 10, 466, 127 ],
             [ 53, 26, 326 ],
             [ 144, 313, 386 ],
             [ 474, 304, 401 ],
             [ 356, 226, 367 ],
             [ 138, 278, 418 ],
             [ 217, 144, 461 ],
             [ 390, 317, 180 ],
             [ 166, 330, 307 ],
             [ 489, 495, 238 ],
             [ 262, 435, 322 ],
             [ 140, 296, 319 ],
             [ 146, 482, 157 ],
             [ 495, 93, 494 ],
             [ 257, 113, 297 ],
          ],
          fill: '#8bff16' },
        { data: 
           [ [ 312, 286, 288 ],
             [ 77, 133, 294 ],
             [ 318, 459, 338 ],
             [ 38, 439, 437 ],
             [ 27, 379, 382 ],
             [ 25, 214, 236 ],
             [ 44, 429, 26 ],
             [ 194, 429, 452 ],
             [ 198, 40, 400 ],
             [ 54, 386, 84 ],
             [ 407, 272, 446 ],
             [ 394, 295, 460 ],
             [ 452, 440, 335 ],
             [ 205, 375, 45 ],
             [ 25, 455, 36 ],
             [ 258, 97, 451 ],
             [ 297, 437, 506 ],
             [ 119, 149, 506 ],
             [ 384, 323, 448 ],
             [ 142, 358, 363 ],
             [ 329, 75, 145 ],
             [ 391, 117, 230 ],
             [ 56, 438, 343 ],
             [ 447, 307, 260 ],
             [ 495, 322, 402 ],
             [ 239, 216, 346 ],
             [ 310, 307, 465 ],
             [ 204, 11, 349 ],
             [ 375, 436, 486 ],
             [ 232, 103, 386 ]
          ],
          fill: '#3bb3dc'
          }];
        var scale =  { min: { '0': 10, '1': 11, '2': 26 },
            max: { '0': 495, '1': 500, '2': 506 },
            maxSet: [],
            len: 30,
            rows: 2,
            ySecs: 5,
            color: [ undefined, undefined ],
            maxRadius: 10,
            yAxis: true,
            xAxis: { format: 'custom', labels: [ 'low', 'high' ] },
            scattered: false,
            fill: true,
            line: true,
            paddingBottom: 20,
            paddingTop: 20,
            paddingRight: 30,
            paddingLeft: 30,
            height: 100,
            width: 300,
            type: 'bubble-scattered',
            _data: data,
            pHeight: 60,
            pWidth: 240,
            tickSize: 120,
            prefLen: 2,
            widthRatio: 0.48484848484848486,
            heightRatio: 0.12 };
        
        var result = bubble._describeBubbleChart(data, scale);
        expect(result)
            .to.be.a('array')
            .to.satisfy(function (result) {
                return (/<circle\s.*>/i).test(result.join("")) && !(/NaN/).test(result.join(""));
            });
    });
});